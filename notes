-------------------------
--------------------------
This are just personal notes to this project and what I did learned new.
You can ignore them.
-------------------------
-------------------------
         JFrame
-------------------------
Is a part of a collection of components, its the "frame" of a painting, part of a larger collections of GUI components
JFrame, JPanel, JTextField, JScrollPane, JLabel...

-------------------------
        javadoc
-------------------------
Like I was used in C# summary's fpr constructors can get created by /// and here in Java you do /** + ENTER
/**
  * Example Title
  *
  * @param param1 Description of the param
  * @param param2 Description of the param
  *
  */

-------------------------
        Mouse listener
-------------------------
mouseListener() checking -clicked -pressed -released
mouseMotionListener() -moved -dragged

-------------------------
        g.setColor()
-------------------------
g.setColor() gives the upcoming shapes a color

-------------------------
        nextInt(x)
-------------------------
nextInt(x) returns an integer between 0 and x

-------------------------
        Gameloop
-------------------------
GameLoop needed to repaint the surface, everytime we call repaint we're actually call paintComponent and repainting it
with the new values

GameLoop components:
-Thread
-Runnable

-------------------------
    Problems with gameloops just with repaint()
-------------------------
One of many problems of repaint-loop is that everything(input, rendering, updates, event check) happens on the same thread.
We want that gameloop is on a seperate thread and updates, event checks are on them
and on the main thread are the inputs, rendering

-------------------------
        Thread/Runnable
-------------------------
What is a Thread?
Its similar like an process in a OS like browser process, discord etc.
- One program can have more than one process
- One process can have more than one thread
-- A thread takes care of a specific task

What is a Runnable?
-It passed into a thread
- The code we want to run in a seperate thread
Call: Thread.start();